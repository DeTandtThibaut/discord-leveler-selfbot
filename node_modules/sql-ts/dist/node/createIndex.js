'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
const sliced = require("sliced");
const _1 = require(".");
class CreateIndexNode extends _1.Node {
    constructor(table, indexName) {
        super('CREATE INDEX');
        this.table = table;
        this.options = { indexName, columns: [] };
    }
    unique() {
        this.options.type = 'unique';
        return this;
    }
    spatial() {
        this.options.type = 'spatial';
        return this;
    }
    fulltext() {
        this.options.type = 'fulltext';
        return this;
    }
    using(algorithm) {
        this.options.algorithm = algorithm;
        return this;
    }
    on(...columns) {
        const args = sliced(columns);
        this.options.columns = this.options.columns.concat(args);
        return this;
    }
    withParser(parser) {
        this.options.parser = parser;
        return this;
    }
    indexName() {
        let result = this.options.indexName;
        if (!result) {
            const columns = this.options.columns.map((col) => (col.name ? col.name : col.value.name)).sort();
            result = [this.table.getName(), ...columns].join('_');
        }
        return result;
    }
}
exports.CreateIndexNode = CreateIndexNode;
//# sourceMappingURL=createIndex.js.map