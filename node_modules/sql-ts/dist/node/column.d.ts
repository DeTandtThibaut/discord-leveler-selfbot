import { Node } from '.';
import { Column } from '../column';
import { Table } from '../table';
export declare class ColumnNode extends Node {
    name: string;
    property: string;
    alias?: string;
    star?: boolean;
    isConstant?: boolean;
    constantValue?: any;
    asArray?: boolean;
    aggregator?: string;
    table?: Table<any>;
    value: any;
    dataType?: string;
    isDistinct?: boolean;
    primaryKey?: boolean;
    notNull?: boolean;
    defaultValue?: any;
    references?: string | {
        table?: string;
        column?: string;
        constraint?: string;
        onDelete?: 'restrict' | 'cascade' | 'no action' | 'set null' | 'set default';
        onUpdate?: 'restrict' | 'cascade' | 'no action' | 'set null' | 'set default';
    };
    subfieldContainer?: Column<any>;
    subfields: {
        [key: string]: Column<any>;
    };
    autoGenerated: boolean;
    unique: boolean;
    constructor(config: Column<any>);
    distinct(): this;
    as(alias: string): this;
}
