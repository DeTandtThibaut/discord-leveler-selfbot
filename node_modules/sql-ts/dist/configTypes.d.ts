import { Sql } from './sql';
export declare type SQLDialects = 'mssql' | 'mysql' | 'oracle' | 'postgres' | 'sqlite';
export interface ColumnDefinitionBase {
    property?: string;
    autoGenerated?: boolean;
    dataType?: string;
    primaryKey?: boolean;
    references?: string | {
        table?: string;
        column?: string;
        constraint?: string;
        onDelete?: 'restrict' | 'cascade' | 'no action' | 'set null' | 'set default';
        onUpdate?: 'restrict' | 'cascade' | 'no action' | 'set null' | 'set default';
    };
    notNull?: boolean;
    unique?: boolean;
    defaultValue?: any;
    subfields?: string[];
}
export interface ColumnDefinition extends ColumnDefinitionBase {
    name: string;
}
export interface ColumnDefinitionObject {
    [name: string]: ColumnDefinitionBase;
}
export interface ForeignKeyDefinition {
    name?: string;
    table: string;
    columns: string[];
    refColumns?: string[];
    onDelete?: 'restrict' | 'cascade' | 'no action' | 'set null' | 'set default';
    onUpdate?: 'restrict' | 'cascade' | 'no action' | 'set null' | 'set default';
}
export interface TableDefinition {
    name: string;
    schema?: string;
    columns: Array<ColumnDefinition | string> | ColumnDefinitionObject;
    isTemporary?: boolean;
    foreignKeys?: ForeignKeyDefinition | ForeignKeyDefinition[];
    sql?: Sql;
    engine?: string;
    charset?: string;
    snakeToCamel?: boolean;
    columnWhiteList?: boolean;
}
