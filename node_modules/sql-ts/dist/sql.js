'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const _ = require("lodash");
const sliced = require("sliced");
const column_1 = require("./column");
const dialect_1 = require("./dialect");
const functions = tslib_1.__importStar(require("./functions"));
const node_1 = require("./node");
const table_1 = require("./table");
exports.Table = table_1.Table;
class Sql {
    constructor(dialect = dialect_1.DEFAULT_DIALECT, config = {}) {
        this.setDialect(dialect, config);
        // attach the standard SQL functions to this instance
        this.functions = functions.getStandardFunctions();
        this._function = functions.getFunctions;
    }
    function(...args) {
        return this._function(...args);
    }
    // Define a table
    define(def) {
        def = _.defaults(def || {}, {
            sql: this
        });
        return table_1.Table.define(def);
    }
    // Returns a bracketed call creator literal
    array(...args) {
        const arrayCall = new node_1.ArrayCallNode(sliced(args));
        return arrayCall;
    }
    // Returns a select statement
    select(...args) {
        const query = new node_1.Query({ sql: this });
        query.select(...args);
        return query;
    }
    // Returns an interval clause
    interval(...args) {
        const interval = new node_1.IntervalNode(sliced(args));
        return interval;
    }
    // Set the dialect
    setDialect(dialect, config = {}) {
        this.dialect = dialect_1.getDialect(dialect);
        this.dialectName = dialect;
        this.config = config;
        return this;
    }
    // Create a constant Column (for use in SELECT)
    constant(value) {
        const config = {
            constantValue: value,
            isConstant: true,
            name: 'constant',
            property: 'constant'
        };
        const cn = new column_1.Column(config);
        return cn;
    }
}
exports.Sql = Sql;
//# sourceMappingURL=sql.js.map